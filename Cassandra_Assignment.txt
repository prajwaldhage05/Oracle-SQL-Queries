Cassandra Assignment:
	
1. Create Employee table
Create table employee(
Empid int,
Emp_salary int,
Emp_lastname varchar,
Emp_firstname text,
Emp_dob date,
Emp_deptno int,
Emp_comm float,
Primary key((Empid,Emp_salary),Emp_firstname,emp_dob)
What is output of following query?

Create table employee(
Empid int,
Emp_salary int,
Emp_lastname varchar,
Emp_firstname text,
Emp_dob date,
Emp_deptno int,
Emp_comm float,
Primary key((Empid,Emp_salary),Emp_firstname,emp_dob);

insert into employee(Empid,Emp_salary,Emp_lastname,Emp_firstname,Emp_dob,Emp_deptno,Emp_comm) 
values(1001,5000,'Dhoni','Rajan','1999-11-11',10,500);


insert into employee(Empid,Emp_salary,Emp_lastname,Emp_firstname,Emp_dob,Emp_deptno,Emp_comm) 
values(1002,2000,'Sharma','Sajan','2000-05-11',20,564.45);

	1. select * from employee where Empid in (1001,1002) and Emp_salary in 		(2000,5000);
 empid | emp_salary | emp_firstname | emp_dob    | emp_comm  | emp_deptno | emp_lastname
-------+------------+---------------+------------+-----------+------------+--------------
  1001 |       5000 |         Rajan | 1999-11-11 |       500 |         10 |        Dhoni
  1002 |       2000 |         Sajan | 2000-05-11 | 564.45001 |         20 |       Sharma

	2. Select * from employee Where Empid=1001 and Emp_dob=’1999-11-11’ and 	Emp_salary=5000 and Emp_firstname=’Rajan’;
 empid | emp_salary | emp_firstname | emp_dob    | emp_comm | emp_deptno | emp_lastname
-------+------------+---------------+------------+----------+------------+--------------
  1001 |       5000 |         Rajan | 1999-11-11 |      500 |         10 |        Dhoni

	3. select * from employee where Empid=1001 and Emp_dob='1999-11-11' and 	Emp_salary>2000 and Emp_firstname='Rajan' allow filtering;
 empid | emp_salary | emp_firstname | emp_dob    | emp_comm | emp_deptno | emp_lastname
-------+------------+---------------+------------+----------+------------+--------------
  1001 |       5000 |         Rajan | 1999-11-11 |      500 |         10 |        Dhoni

	4.  Select * from employee
Where Empid=1001 and Emp_dob=’1999-11-11’ and Emp_salary>5000 and
Emp_salary<15000 allow filtering;
 empid | emp_salary | emp_firstname | emp_dob | emp_comm | emp_deptno | emp_lastname
-------+------------+---------------+---------+----------+------------+--------------


	5. Select * from employee
Where Empid=1001 and Emp_dob=’1999-11-11’ and Emp_firstname='Rajan' and Emp_salary>5000 and Emp_deptno>10 allow filtering;
 empid | emp_salary | emp_firstname | emp_dob | emp_comm | emp_deptno | emp_lastname
-------+------------+---------------+---------+----------+------------+--------------


	6. Select * from employee
Where Empid=1001 and Emp_dob=’1999-11-11’ and Emp_firstname='Rajan' and Emp_salary>5000 and Emp_deptno>10
ALLOW FILTERING;
 empid | emp_salary | emp_firstname | emp_dob | emp_comm | emp_deptno | emp_lastname
-------+------------+---------------+---------+----------+------------+--------------

2. Create table to store information about singer, use appropriate collections to store data
Sid and name will be primary key
Sid integer, name string, store list of songs he/she sung, store list of music directors names and how
many songs he sung with the director, store names of studios where recordings have been done and
how many times recording has been done in the studio, also store movie, director name and song in
the movie he/she sung.

A. Write query to add new director name and count 1 in the table
B. List all records of ‘sonu nigam’
C. Add new studio in ‘shan’ and ‘shreya’s list

D. Perform batch operation to insert 2 records and delete 1 record from above
table
E. Delete list of studios and movies from above table from ‘shan’ and ‘sonu nigam’s
record.

create table singer(
sid int,
sname text,
songs list<text>,
music_direct map<text,int>,
studio map<text,int>,
movie text,
director text,
t_song int,
primary key(sid,sname));

insert into singer(sid,sname,songs,music_direct,studio,movie,director,t_song) values(1,'Sonu Nigam',['Abhi muj me kahi','Soniyo'],{'Ajay-Atul':2},{'T-Series':10},'Raaz','Hirani',3);

insert into singer(sid,sname,songs,music_direct,studio,movie,director,t_song) values(2,'Shaan',['Woh ladki hai kahaan','Chaar Kadam','Musu Musu Hasi'],{'Pritam':3},{'Sony Music':20},'PK','Rajkumar',5);

insert into singer(sid,sname,songs,music_direct,studio,movie,director,t_song) values(3,'Shreya',['Amhi Jo Tomar','Zara Zara','Mohe rang do laal'],{'AKF':7},{'SKF':20},'Bhool Bhoolaiya','Rohit Shetty',20);

A. update singer
set music_direct={'Armaan Malik':1}
where sid=1 and sname='Sonu Nigam';

B. select sname, songs from singer where sid=1 and sname='Sonu Nigam';

C.  update singer
set studio=studio + {'Balaji Studio':1}
where sid=2 and sname='Shaan';

update singer
set studio=studio + {'Kanphod Music Studio':1}
where sid=3 and sname='Shreya';

D. 
begin batch
insert into singer(sid,sname,songs,music_direct,studio,movie,director,t_song) values(4,'Arjit Singh',['Tum hi ho','Matargashti','kabira'],{'Shankar Mahadevan':3},{'Top Class Studio':20},'Ashiqui','Zoya Akhtar',7);
insert into singer(sid,sname,songs,music_direct,studio,movie,director,t_song) values(5,'Prajwal Dhage',['Cup Cake','Pehli Mohobhat'],{'Darshan Ravel':3},{'Ravel studio':20},'HI','Rajkumar',5);
delete from singer where sid=1 and sname='Sonu Nigam';
Apply Batch;

 sid | sname         | director     | movie           | music_direct             | songs                                                     | studio                                 | t_song
-----+---------------+--------------+-----------------+--------------------------+-----------------------------------------------------------+----------------------------------------+--------
   5 | Prajwal Dhage |     Rajkumar |              HI |     {'Darshan Ravel': 3} |                            ['Cup Cake', 'Pehli Mohobhat'] |
     {'Ravel studio': 20} |      5
   2 |         Shaan |     Rajkumar |              PK |            {'Pritam': 3} | ['Woh ladki hai kahaan', 'Chaar Kadam', 'Musu Musu Hasi'] | {'Balaji Studio': 1, 'Sony Music': 20} |      5
   4 |   Arjit Singh |  Zoya Akhtar |         Ashiqui | {'Shankar Mahadevan': 3} |                    ['Tum hi ho', 'Matargashti', 'kabira'] |
 {'Top Class Studio': 20} |      7
   3 |        Shreya | Rohit Shetty | Bhool Bhoolaiya |               {'AKF': 7} |       ['Amhi Jo Tomar', 'Zara Zara', 'Mohe rang do laal'] | {'Kanphod Music Studio': 1, 'SKF': 20} |     20

E. update singer
set studio = studio -{'T-Series'}
where sid=1 and sname='Sonu Nigam';

delete movie from singer where sid=1 and sname='Sonu Nigam';

update singer
set studio = studio -{'Sony Music'}
where sid=2 and sname='Shaan';

delete movie from singer where sid=2 and sname='Shaan';

sid | sname         | director     | movie           | music_direct             | songs                                                     | studio                                 | t_song
-----+---------------+--------------+-----------------+--------------------------+-----------------------------------------------------------+----------------------------------------+--------
   5 | Prajwal Dhage |     Rajkumar |              HI |     {'Darshan Ravel': 3} |                            ['Cup Cake', 'Pehli Mohobhat'] |
     {'Ravel studio': 20} |      5
   1 |    Sonu Nigam |       Hirani |            null |         {'Ajay-Atul': 2} |                            ['Abhi muj me kahi', 'Soniyo'] |
                     null |      3
   2 |         Shaan |     Rajkumar |            null |            {'Pritam': 3} | ['Woh ladki hai kahaan', 'Chaar Kadam', 'Musu Musu Hasi'] |
     {'Balaji Studio': 1} |      5
   4 |   Arjit Singh |  Zoya Akhtar |         Ashiqui | {'Shankar Mahadevan': 3} |                    ['Tum hi ho', 'Matargashti', 'kabira'] |
 {'Top Class Studio': 20} |      7
   3 |        Shreya | Rohit Shetty | Bhool Bhoolaiya |               {'AKF': 7} |       ['Amhi Jo Tomar', 'Zara Zara', 'Mohe rang do laal'] | {'Kanphod Music Studio': 1, 'SKF': 20} |     20




3. Create a data type to store information about server. For each server store id, name, ram
capacity. Create a table lacation to store bldgname,floor number and list of servers on the
floor. Building name is primary key and floor number is cluster key.

create type server1(
sid int,
sname text,
ram int);

create table location(
bname text,
floor int,
serverlist list<FROZEN<server1>>,
primary key(bname,floor));

insert into location(bname,floor,serverlist) values('A',7,[{sid:100,sname:'Google Server',ram:16},{sid: 101,sname: 'Main Server',ram: 32}]);

insert into location(bname,floor,serverlist) values('B',5,[{sid: 201,sname: 'Amazon Server',ram: 32},{sid: 202,sname: 'ECS Server',ram: 256},{sid: 203,sname:'Developer Server',ram:64}]);


insert into location(bname,floor,serverlist) values('C',4,[{sid: 301,sname: 'Microsoft Server',ram: 128},{sid: 302,sname: 'Azure',ram: 512}]);

a. Find list of all servers from ‘A’ building and floor number > 5
select floor, serverlist from location where bname='A' and floor>5;

floor | serverlist
-------+------------------------------------------------------------------------------------------
     7 | [{sid: 100, sname: 'Google Server', ram: 16}, {sid: 101, sname: 'Main Server', ram: 32}]

b. Find list of all servers from ‘A’,’B’,’C’ building.
select serverlist from location where bname in ('A','B','C');
 serverlist
------------------------------------------------------------------------------------------------------------------------------------------
                                                 [{sid: 100, sname: 'Google Server', ram: 16}, {sid: 101, sname: 'Main Server', ram: 32}]
 [{sid: 201, sname: 'Amazon Server', ram: 32}, {sid: 202, sname: 'ECS Server', ram: 256}, {sid: 203, sname: 'Developer Server', ram: 64}]
                                                  [{sid: 301, sname: 'Microsoft Server', ram: 128}, {sid: 302, sname: 'Azure', ram: 512}]

 
